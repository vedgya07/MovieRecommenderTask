DDL Command for moviedb:
===========================================================================================

-- Create Database
CREATE Database moviedb
use moviedb

-- Users Table
CREATE TABLE users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
	email VARCHAR(100),
    role VARCHAR(50) NOT NULL
);

-- Genres Table
CREATE TABLE genres (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL
);

-- Movies Table
CREATE TABLE movies (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    image_url VARCHAR(255),
    director_name VARCHAR(255)
);

-- Movie Genres Junction Table
CREATE TABLE movie_genres (
    movie_id BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    PRIMARY KEY (movie_id, genre_id),
    FOREIGN KEY (movie_id) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE
);

-- Ratings Table
CREATE TABLE ratings (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    movie_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    score INT NOT NULL,
    novelty INT NOT NULL,
    FOREIGN KEY (movie_id) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

===============================================================================================
DML Commands
===============================================================================================
--for user table

INSERT INTO users (username, password, role) VALUES ('admin', '$2a$10$X.b7F1MK4lBQDZ/VDGXY/eK3J0u.VRAfdTjFC65M3jTFOnz67Z.4.', 'ADMIN'); 
INSERT INTO users (username, password, role) VALUES ('user1', '$2a$10$X.b7F1MK4lBQDZ/VDGXY/eK3J0u.VRAfdTjFC65M3jTFOnz67Z.4.', 'USER');
INSERT INTO users (username, password, role) VALUES ('user2', '$2a$10$X.b7F1MK4lBQDZ/VDGXY/eK3J0u.VRAfdTjFC65M3jTFOnz67Z.4.', 'USER');

--for genre table

INSERT INTO genres (name) VALUES ('Action');
INSERT INTO genres (name) VALUES ('Comedy');
INSERT INTO genres (name) VALUES ('Drama');
INSERT INTO genres (name) VALUES ('Science Fiction');
INSERT INTO genres (name) VALUES ('Fantasy');

--for movies table

INSERT INTO movies (title, description, image_url, director_name) 
VALUES ('Inception', 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.', 'inception.jpg', 'Christopher Nolan');

INSERT INTO movies (title, description, image_url, director_name) 
VALUES ('The Dark Knight', 'When the menace known as the Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.', 'dark_knight.jpg', 'Christopher Nolan');

INSERT INTO movies (title, description, image_url, director_name) 
VALUES ('Interstellar', 'A team of explorers travel through a wormhole in space in an attempt to ensure humanity\'s survival.', 'interstellar.jpg', 'Christopher Nolan');

--for movie_genres table

INSERT INTO movie_genres (movie_id, genre_id) VALUES (1, 1); -- Inception, Action
INSERT INTO movie_genres (movie_id, genre_id) VALUES (1, 4); -- Inception, Science Fiction
INSERT INTO movie_genres (movie_id, genre_id) VALUES (2, 1); -- The Dark Knight, Action
INSERT INTO movie_genres (movie_id, genre_id) VALUES (3, 4); -- Interstellar, Science Fiction

--for rating table

INSERT INTO ratings (movie_id, user_id, score, novelty) VALUES (1, 2, 9, 8); -- User1 rates Inception
INSERT INTO ratings (movie_id, user_id, score, novelty) VALUES (1, 3, 8, 9); -- User2 rates Inception
INSERT INTO ratings (movie_id, user_id, score, novelty) VALUES (2, 2, 10, 10); -- User1 rates The Dark Knight
INSERT INTO ratings (movie_id, user_id, score, novelty) VALUES (3, 3, 9, 8); -- User2 rates Interstellar

=================================================================================================
Command to create and grant specific role and privileges for this(mysql database)

--MySQL does not have a direct "role" feature like some other database systems (e.g., PostgreSQL, Oracle). Instead, I am creating a user with specific privileges. 

--Creating user
CREATE USER 'movie_app_user'@'localhost' IDENTIFIED BY 'your_secure_password';

--granting privileges
GRANT SELECT, INSERT, UPDATE, DELETE ON movie_db.* TO 'movie_app_user'@'localhost';

--applying changes
FLUSH PRIVILEGES;

--check granted privileges
SHOW GRANTS FOR 'movie_app_user'@'localhost';



